extends layout

block content
  h2 #{place.title}
  hr
  span 
    b Адрес: 
    span #{place.address}
  br
  span 
    b Автор: 
    span #{place.author}
  br
  span 
    b Рейтинг: 
    span #{place.rating}
  br
  span 
    b Широта: 
    span #{place.lat}
  br
  span 
    b Долгота: 
    span #{place.lon}
  br
  -if (result.kpp!=null)
    span 
      b КПП: 
      span #{result.kpp}
    br
  -if (result.inn!=null)
    span 
      b ИНН: 
      span #{result.inn}
    br
  -if (result.contractsCount!=null)
    span 
      b Количество контрактов: 
      span #{result.contractsCount}
    br
  -if (result.contractsCount!=null)
    span 
      b Сумма контрактов: 
      span #{result.contractsSum}
    br
  -if (result.regNumber!=null)
    span 
      b Регистрационный номер: 
      span #{result.regNumber}
    br
  -if (result.regNumber!=null)
    span 
      b Идентификатор: 
      span #{result.id}
    br
  hr
  br

  .row
    .col-md-12
      != place.description
      //p= JSON.stringify(result)
      //p= JSON.stringify(contracts)
  br

  .row
    .col-md-12
      .panel.panel-default
        .panel-heading Карта
        .panel-body
          div(id="map" style="width: 100%; height: 400px")
            - if (typeof(places) != null)
              != "<script type='text/javascript'>"
              != "function init1() {"
              != "init(" + place.lat + ", " + place.lon + ", '"+place.title+"');"
              != "}"
              != "</script>"
            script.
              ymaps.ready(init1);
              var myMap, myPlacemark;

              function init(lat, lon, title) {
                myMap = new ymaps.Map ("map", {
                  center: [lat, lon],
                  zoom: 14
                });   
                var placemark = new ymaps.Placemark([lat, lon], { content: title, balloonContent: title });
                myMap.geoObjects.add(placemark); 
              }        

  .row
    .col-md-12
      .panel.panel-default
        .panel-heading Объяснения
        .panel-body
          if place.explanations.length>0
            each explanation in place.explanations
              table(style="width: 100%;")
                tr
                  td
                    if explanation.contract===null
                      span
                        b Контракт: не указан
                    else
                      span
                        b Контракт
                        &nbsp; &nbsp;
                        span #{explanation.contract}
                    br
                    span
                      b Author
                      a(href="/profile/#{explanation.authorId}") 
                          =explanation.author
                  td(class="donate" style="text-align: right;")
                    if explanation.email!==null
                      //button(class="paypal-button large" rel="#{explanation.email}") Пожертвовать
                      a(class="paypal-button large" href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=#{explanation.email}&lc=RU&item_name=#{explanation.email}&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHostedGuest" class="paypal-button large" rel="#{explanation.email}" target="_blank" onclick="window.open('https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=m0rg0t%2eAnton%40gmail%2ecom&lc=RU&item_name=m0rg0t%2eAnton%40gmail%2ecom&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHostedGuest','_self',false); return true;") Пожертвовать

              div
                !=explanation.text
              hr
          else
            p Нет объяснений для места
          
          div(class="well bs-component")
            form(class="form-horizontal" method="POST" id="explanationForm" action="/places/explanations/add")
              fieldset
                legend Добавление нового объяснение
                div(class="form-group")          
                  label(for="title" class="col-lg-2 control-label") Ссылка на информацию (конракт, бюджет, др.)
                  div(class="col-lg-10")
                    input(type='text' name='contract' id='contract', placeholder='' class='form-control' required="required")

                div(class="form-group")          
                  label(for="text" class="col-lg-2 control-label") Описание места
                  div(class="col-lg-10")
                    textarea(name='text', id='text' class='form-control' required="required")
                input(type="hidden" value="#{place.id}" name="placeId")
                input(type="submit" class="btn btn-primary" value="Добавить")
                input(type="reset" class="btn btn-primary" value="Очистить")
                script.
                    // prepare the form when the DOM is ready 
                    $(document).ready(function() { 
                        var options = { 
                            //target:        '#explanationFormOutput',   // target element(s) to be updated with server response 
                            beforeSubmit:  showRequest,  // pre-submit callback 
                            success:       showResponse  // post-submit callback 
 
                            // other available options: 
                            //url:       url         // override for form's 'action' attribute 
                            //type:      type        // 'get' or 'post', override for form's 'method' attribute 
                            //dataType:  null        // 'xml', 'script', or 'json' (expected server response type) 
                            //clearForm: true        // clear all form fields after successful submit 
                            //resetForm: true        // reset the form after successful submit 
 
                            // $.ajax options can be used here too, for example: 
                            //timeout:   3000 
                        }; 
 
                        // bind to the form's submit event 
                        $('#explanationForm').submit(function() { 
                            //console.log("explanationForm");
                            // inside event callbacks 'this' is the DOM element so we first 
                            // wrap it in a jQuery object and then invoke ajaxSubmit 
                            try {
                                $(this).ajaxSubmit(options); 
                            } catch(ex) { console.log(ex); }
 
                            // !!! Important !!! 
                            // always return false to prevent standard browser submit and page navigation 
                            return false; 
                        }); 
                    }); 
 
                    // pre-submit callback 
                    function showRequest(formData, jqForm, options) { 
                        // formData is an array; here we use $.param to convert it to a string to display it 
                        // but the form plugin does this for you automatically when it submits the data 
                        var queryString = $.param(formData); 
 
                        // jqForm is a jQuery object encapsulating the form element.  To access the 
                        // DOM element for the form do this: 
                        // var formElement = jqForm[0]; 
 
                        //alert('About to submit: \n\n' + queryString); 
 
                        // here we could return false to prevent the form from being submitted; 
                        // returning anything other than false will allow the form submit to continue 
                        return true; 
                    } 
 
                    // post-submit callback 
                    function showResponse(responseText, statusText, xhr, $form)  {                         
                        try {
                            $('#explanationForm')[0].reset();
                        } catch(ex) { }
                        //alert('status: ' + statusText + '\n\nresponseText: \n' + responseText + '\n\nThe output div should have already been updated with the responseText.'); 
                        console.log(responseText);
                        alert("Ваше объяснение добавлено");
                    } 

          //script
            $(".paypal-button").click(function() {
              var email = $(this).attr("rel");
              //email = "test@example.com";
              window.open("https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=m0rg0t%2eAnton%40gmail%2ecom&lc=RU&item_name=m0rg0t%2eAnton%40gmail%2ecom&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHostedGuest", "_blank");
              function func() {
                window.open('https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business='+email+'&lc=RU&item_name='+email+'&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHostedGuest', '_blank');
              }
              setTimeout(func, 2000);              
            });


  .row
    .col-md-12
      .panel.panel-default
        .panel-heading Комментарии
        .panel-body
          include disqus.html


  .row
    .col-md-12
      .panel.panel-default
        .panel-heading Контракты
        .panel-body
          div(id="contracts") Hello world
          - if (typeof(result) != null)
            != "<script type='text/javascript'>"
            != "jQuery(document).ready(function() {"
            != "initContracts(" + result.kpp + ", " + result.inn + ");"
            != "});"
            != "</script>"
          script.
            function initContracts(kpp, inn) {
              jQuery.get( "/api/contracts/"+kpp+"/"+inn, function( data ) {
                console.log(data);
                jQuery("#contracts").html("");
                var contracts = data.contracts.contracts.data;
                for (var i=0; i<contracts.length; ++i) {
                  var item = contracts[i];
                  jQuery("#contracts").append("<span><b>Цена:</b> "+ item.price + " рублей</span></br>" + "<span><b>Номер: <a href='http://clearspending.ru/contract/"+item.regNum+"'>"+item.regNum +"</a><hr>");
                }
              });
            }
